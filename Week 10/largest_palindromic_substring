#include<stdio.h>
#include<string.h>

int longestPalindrome(char str[],int left,int right)             //returns the length of longest palindromic string
{
	if(strlen(str) == 0 || left>right)
		return 0;
	
	while(left>=0 && right<strlen(str) && str[left] == str[right])    //left and right pointers move in opposite directions and keep comparing
	{
		left = left - 1;
		right = right + 1;
	}
	return(right-left-1);
}

int main()
{
	int i,start=0,end=0,len1,len2,len,size;
	printf("Enter the size of the string\n");
	scanf("%d",&size);
	
	char str[size];
	
	printf("Enter the string\n");
	scanf("%s",str);
	
	for(i=0;i<strlen(str);i++)
	{
		len1 = longestPalindrome(str,i,i);           //1st case where both left and right point to same character like the 'e' in racecar
		
		len2 = longestPalindrome(str,i,i+1);        //2nd case where left and right point to adjacent characters like 'b' and 'b' in aabbaa
		
		len = len1>len2?len1:len2;                  //taking the maximum of both lengths
		
		if(len>end-start)
		{
			start = i-(len-1)/2;              //start index is midpoint (i) - half the length of the palindrome
			end = i + len/2;                 //end index is midpoint (i) + half the length of the palindrome
		}
	}
	printf("\nThe longest palindromic substring is\n");
	for(i=start;i<=end;i++)
		printf("%c",str[i]);
return 0;	
}
